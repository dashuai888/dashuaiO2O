<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 整合mybatis过程 https://blog.csdn.net/yzllz001/article/details/54809231 -->

    <!-- 1.配置数据库相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 2. 配置数据库连接池 -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!--是否为只读数据库-->
        <property name="readOnly" value="false"/>

        <!--hikari 连接池允许的最大连接数-->
        <property name="maximumPoolSize" value="20"/>

        <!--等待连接池分配链接的最大时长-->
        <property name="connectionTimeout" value="30000"/>

        <!--一个链接 idle 状态最大时长-->
        <property name="idleTimeout" value="600000"/>

        <!--一个链接最长的生命时长，超时没有被使用则被释放掉,建议比数据库超时时长少 30s-->
        <property name="maxLifetime" value="1800000"/>

        <!--控制从池返回的连接的默认自动提交行为。它是一个布尔值。 默认值：true-->
        <property name="autoCommit" value="false"/>
    </bean>

    <!-- 3. 配置 SqlSessionFactory 对象，用来创建数据库连接池 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池对象到  sqlSessionFactory 的 dataSource 属性-->
        <property name="dataSource" ref="dataSource"/>

        <!-- 配置 MyBatis 全局配置文件 mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>

        <!-- 扫描 entity -->
        <property name="typeAliasesPackage" value="com.dashuai.dashuaiO2O.entity"/>

        <!-- 扫描 sql 映射文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4. 配置去哪一个包扫描 dao 接口，动态实现 dao 接口，注入到 Spring IOC 容器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 将自动创建的连接池对象注入 sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>

        <!-- 给出需要扫描的 Dao 接口包位置 -->
        <property name="basePackage" value="com.dashuai.dashuaiO2O.dao"/>
    </bean>
</beans>